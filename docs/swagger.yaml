basePath: /
definitions:
  entity.Task:
    properties:
      date:
        type: string
      description:
        type: string
      status:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  v1.createTaskInput:
    properties:
      date:
        maxLength: 64
        minLength: 6
        type: string
      description:
        type: string
      status:
        type: string
      title:
        maxLength: 64
        minLength: 2
        type: string
    required:
    - date
    - title
    type: object
  v1.createTaskResponse:
    properties:
      id:
        type: integer
    type: object
  v1.deleteTaskByIdInput:
    properties:
      task_id:
        type: integer
    required:
    - task_id
    type: object
  v1.errorResponse:
    properties:
      error:
        type: string
    type: object
  v1.getAllUserTasksByDataInput:
    properties:
      date:
        type: string
      limit:
        minimum: 1
        type: integer
      offset:
        minimum: 1
        type: integer
    required:
    - limit
    - offset
    type: object
  v1.getAllUserTasksResponse:
    properties:
      tasks:
        items:
          $ref: '#/definitions/entity.Task'
        type: array
    type: object
  v1.getTaskByIDResponse:
    properties:
      task:
        $ref: '#/definitions/entity.Task'
    type: object
  v1.setTaskStatusInput:
    properties:
      status:
        type: string
      task_id:
        type: integer
    required:
    - status
    - task_id
    type: object
  v1.signInInput:
    properties:
      login:
        maxLength: 64
        minLength: 2
        type: string
      password:
        maxLength: 64
        minLength: 6
        type: string
    required:
    - login
    - password
    type: object
  v1.signUpInput:
    properties:
      email:
        maxLength: 64
        type: string
      login:
        maxLength: 64
        minLength: 2
        type: string
      password:
        maxLength: 64
        minLength: 6
        type: string
    required:
    - email
    - login
    - password
    type: object
  v1.signUpResponse:
    properties:
      id:
        type: integer
    type: object
  v1.tokenResponse:
    properties:
      token:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: msonkin33@gmail.com
    name: Maksim Sonkin
  description: This is a service that implements the functions of a daily planner
  title: TO-DO service
  version: "1.0"
paths:
  /api/v1/agenda/:task_id:
    get:
      description: getting task by id
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.getTaskByIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - Bearer: []
      summary: Get Task By ID
      tags:
      - agenda
  /api/v1/agenda/create:
    post:
      consumes:
      - application/json
      description: create task
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.createTaskInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.createTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - Bearer: []
      summary: Create task
      tags:
      - agenda
  /api/v1/agenda/delete_all:
    delete:
      description: deleting all user tasks by user id
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - Bearer: []
      summary: Delete All User Tasks
      tags:
      - agenda
  /api/v1/agenda/delete_by_id:
    delete:
      consumes:
      - application/json
      description: deleting task by id
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.deleteTaskByIdInput'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - Bearer: []
      summary: Delete Task By ID
      tags:
      - agenda
  /api/v1/agenda/get_all:
    get:
      description: getting all user tasks by user id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.getAllUserTasksResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - Bearer: []
      summary: Get All User Tasks
      tags:
      - agenda
  /api/v1/agenda/get_by_date:
    get:
      consumes:
      - application/json
      description: getting all user tasks by user id and date or status (also support
        pagination)
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.getAllUserTasksByDataInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.getAllUserTasksResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - Bearer: []
      summary: Get All User Tasks
      tags:
      - agenda
  /api/v1/agenda/set_status:
    put:
      consumes:
      - application/json
      description: updating task status by id
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.setTaskStatusInput'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - Bearer: []
      summary: Update Task Status
      tags:
      - agenda
  /api/v1/auth/refresh:
    get:
      description: refresh user's access token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: User Refresh Token
      tags:
      - auth
  /api/v1/auth/sign-in:
    post:
      consumes:
      - application/json
      description: user sign in
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: User SignIn
      tags:
      - auth
  /api/v1/auth/sign-up:
    post:
      consumes:
      - application/json
      description: create user account
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.signUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.signUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: User SignUp
      tags:
      - auth
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
